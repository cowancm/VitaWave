@page "/visualizer"
@rendermode InteractiveAuto
@using Common.Visualizer;
@using System.Timers;

@* I'm keeping this as a reference for realtime changing of a chart. It is not being used *@

<div class="d-flex">
    <div style="width: 80%;">
        <ApexChart TItem="VisualizerTarget"
            Title="Sample Data"
            XAxisType="XAxisType.Numeric"
            Options="_targetOptions"
            Height="1000"
        @ref="chart">
            @foreach (var group in _targets.GroupBy(t => t.Name))
            {
                var color = group.First().Color ?? "#000000";
                var status = group.First().Status ?? "Unknown";
                <ApexPointSeries TItem="VisualizerTarget"
                Items="group.ToList()"
                Name="@status"
                SeriesType="SeriesType.Scatter"
                XValue="e => e.X"
                YValue="e => e.Y"
                PointColor="e => e.Color"
                Color="@color"
                ShowDataLabels="false" />
            }
        </ApexChart>

    </div>

    <div class="custom-legend" style="width: 20%; padding-left: 20px;">
        <h4>Target Status</h4>
        @foreach (var item in _targets)
        {
            <div class="legend-item d-flex align-items-center mb-2">
                <div style="width: 20px; height: 20px; background-color: @item.Color; margin-right: 20px;"></div>
                <span>@item.Name: @item.Status</span>
            </div>
        }
    </div>
</div>

@code {
    private List<VisualizerTarget> _targets { get; set; } = new();
    private ApexChartOptions<VisualizerTarget> _targetOptions = new();
    private ApexChart<VisualizerTarget> chart;

    int Abs_Max_X = 5;
    int Max_Y = 10;

    protected override void OnInitialized()
    {
        _targetOptions.Markers = new() { Size = 15, Shape = ShapeEnum.Square };

        _targetOptions.Xaxis = new();
        _targetOptions.Yaxis = new();

        _targetOptions.Xaxis.Min = (-1 * Abs_Max_X);
        _targetOptions.Xaxis.Max = Abs_Max_X;
        _targetOptions.Yaxis = new(){
            new YAxis(){
                Min = 0,
                Max = Max_Y
            }
        };

        var _timer = new Timer(200);
        _timer.Elapsed += async (s, e) => await OnTimedEvent(s, e);
        _timer.AutoReset = true; // Repeats every interval
        _timer.Enabled = true;

        //examples
        _targets.Add(new VisualizerTarget { X = -3, Y = 2, Color = "#F39F18", Name = "Target A", Status = "Falling" });
        _targets.Add(new VisualizerTarget { X = 2, Y = 4, Color = "#6D3F5B", Name = "Target B", Status = "Sitting" });
        _targets.Add(new VisualizerTarget { X = 3, Y = 6, Color = "#1C542D", Name = "Target C", Status = "Standing" });
    }

    private async Task OnTimedEvent(object? source, ElapsedEventArgs e)
    {

        var random = new Random();
        Random rnd = new Random();
        int nextX = rnd.Next(1, 10);
        int nextY = rnd.Next(1, 10);

        int nextTarget = rnd.Next(1, 4);

        try
        {
            _targets[nextTarget].X = nextX;
            _targets[nextTarget].Y = nextY;
            await chart.UpdateSeriesAsync(true);
        }
        catch
        {

        }
    }

    
}