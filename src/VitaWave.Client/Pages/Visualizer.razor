@page "/visualizer"
@using System.Timers
@rendermode InteractiveAuto

<div class="d-flex">
    <div style="width: 80%;">
        <ApexChart TItem="Target"
        Title="Sample Data"
        XAxisType="XAxisType.Numeric"
        Options="_targetOptions"
        Height="1000">
            @foreach (var group in _targets.GroupBy(t => t.Name))
            {
                var color = group.First().Color ?? "#000000";
                var status = group.First().Status ?? "Unknown";
                <ApexPointSeries TItem="Target"
                                 Items="group.ToList()"
                                 Name="@status"
                                 SeriesType="SeriesType.Scatter"
                                 XValue="e => e.X"
                                 YValue="e => e.Y"
                                 PointColor="e => e.Color"
                                 Color="@color"
                                 ShowDataLabels="false" />
            }
        </ApexChart>

    </div>

    <div class="custom-legend" style="width: 20%; padding-left: 20px;">
        <h4>Target Status</h4>
        @foreach (var item in _targets)
        {
            <div class="legend-item d-flex align-items-center mb-2">
                <div style="width: 20px; height: 20px; background-color: @item.Color; margin-right: 20px;"></div>
                <span>@item.Name: @item.Status</span>
            </div>
        }
    </div>
</div>

@code {
    private List<Target> _targets { get; set; } = new();
    private ApexChartOptions<Target> _targetOptions = new();

    int Abs_Max_X = 5;
    int Max_Y = 10;

    protected override void OnInitialized()
    {
        _targetOptions.Markers = new() { Size = 15, Shape = ShapeEnum.Square };

        _targetOptions.Xaxis = new();
        _targetOptions.Yaxis = new();

        _targetOptions.Xaxis.Min = (-1 * Abs_Max_X);
        _targetOptions.Xaxis.Max = Abs_Max_X;
        _targetOptions.Yaxis = new(){
            new YAxis(){
                Min = 0,
                Max = Max_Y
            }
        };

        _targets.Add(new Target { X = -3, Y = 2, Color = "#F39F18", Name = "Target A", Status = "Falling" });
        _targets.Add(new Target { X = 2, Y = 4, Color = "#6D3F5B", Name = "Target B", Status = "Sitting" });
        _targets.Add(new Target { X = 3, Y = 6, Color = "#1C542D", Name = "Target C", Status = "Standing" });
    }



    public class Target
    {
        public int X { get; set; }
        public int Y { get; set; }
        public string? Color { get; set; }
        public string? Name { get; set; }
        public string? Status { get; set; }
    }
}